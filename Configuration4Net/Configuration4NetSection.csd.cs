//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Configuration4Net
{
    
    
    /// <summary>
    /// The AgentConfiguration4NetSection Configuration Section.
    /// </summary>
    public partial class AgentConfiguration4NetSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the AgentConfiguration4NetSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AgentConfiguration4NetSectionSectionName = "agentConfiguration4NetSection";
        
        /// <summary>
        /// Gets the AgentConfiguration4NetSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public static global::Configuration4Net.AgentConfiguration4NetSection Instance
        {
            get
            {
                return ((global::Configuration4Net.AgentConfiguration4NetSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Configuration4Net.AgentConfiguration4NetSection.AgentConfiguration4NetSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.AgentConfiguration4NetSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Configuration4Net.AgentConfiguration4NetSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region ConfigManagers Property
        /// <summary>
        /// The XML name of the <see cref="ConfigManagers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ConfigManagersPropertyName = "managers";
        
        /// <summary>
        /// Gets or sets the ConfigManagers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The ConfigManagers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.AgentConfiguration4NetSection.ConfigManagersPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Configuration4Net.ManagerSectionCollections ConfigManagers
        {
            get
            {
                return ((global::Configuration4Net.ManagerSectionCollections)(base[global::Configuration4Net.AgentConfiguration4NetSection.ConfigManagersPropertyName]));
            }
            set
            {
                base[global::Configuration4Net.AgentConfiguration4NetSection.ConfigManagersPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Configuration4Net
{
    
    
    /// <summary>
    /// The Property Configuration Element.
    /// </summary>
    public partial class Property : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.Property.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Configuration4Net.Property.NamePropertyName]));
            }
            set
            {
                base[global::Configuration4Net.Property.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region Value Property
        /// <summary>
        /// The XML name of the <see cref="Value"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ValuePropertyName = "value";
        
        /// <summary>
        /// Gets or sets the Value.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Value.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.Property.ValuePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Value
        {
            get
            {
                return ((string)(base[global::Configuration4Net.Property.ValuePropertyName]));
            }
            set
            {
                base[global::Configuration4Net.Property.ValuePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Configuration4Net
{
    
    
    /// <summary>
    /// A collection of Property instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Configuration4Net.Property), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class PropertyCollections : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Configuration4Net.Property"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PropertyPropertyName = "property";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Configuration4Net.PropertyCollections.PropertyPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Configuration4Net.PropertyCollections.PropertyPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Configuration4Net.Property)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Configuration4Net.Property"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Configuration4Net.Property"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Configuration4Net.Property();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.Property"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Configuration4Net.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.Property this[int index]
        {
            get
            {
                return ((global::Configuration4Net.Property)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.Property"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Configuration4Net.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.Property this[object name]
        {
            get
            {
                return ((global::Configuration4Net.Property)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Configuration4Net.Property"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Configuration4Net.Property"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Configuration4Net.Property property)
        {
            base.BaseAdd(property);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Configuration4Net.Property"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="property">The <see cref="global::Configuration4Net.Property"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Configuration4Net.Property property)
        {
            base.BaseRemove(this.GetElementKey(property));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.Property"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Configuration4Net.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.Property GetItemAt(int index)
        {
            return ((global::Configuration4Net.Property)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.Property"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Configuration4Net.Property"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.Property GetItemByKey(string name)
        {
            return ((global::Configuration4Net.Property)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Configuration4Net
{
    
    
    /// <summary>
    /// The ManagerSection Configuration Element.
    /// </summary>
    public partial class ManagerSection : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.ManagerSection.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Configuration4Net.ManagerSection.NamePropertyName]));
            }
            set
            {
                base[global::Configuration4Net.ManagerSection.NamePropertyName] = value;
            }
        }
        #endregion
        
        #region LoaderType Property
        /// <summary>
        /// The XML name of the <see cref="LoaderType"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string LoaderTypePropertyName = "loaderType";
        
        /// <summary>
        /// Gets or sets the LoaderType.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The LoaderType.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.ManagerSection.LoaderTypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string LoaderType
        {
            get
            {
                return ((string)(base[global::Configuration4Net.ManagerSection.LoaderTypePropertyName]));
            }
            set
            {
                base[global::Configuration4Net.ManagerSection.LoaderTypePropertyName] = value;
            }
        }
        #endregion
        
        #region AppName Property
        /// <summary>
        /// The XML name of the <see cref="AppName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string AppNamePropertyName = "appName";
        
        /// <summary>
        /// Gets or sets the AppName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The AppName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.ManagerSection.AppNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string AppName
        {
            get
            {
                return ((string)(base[global::Configuration4Net.ManagerSection.AppNamePropertyName]));
            }
            set
            {
                base[global::Configuration4Net.ManagerSection.AppNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Properties Property
        /// <summary>
        /// The XML name of the <see cref="Properties"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string PropertiesPropertyName = "properties";
        
        /// <summary>
        /// Gets or sets the Properties.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        [global::System.ComponentModel.DescriptionAttribute("The Properties.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Configuration4Net.ManagerSection.PropertiesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Configuration4Net.PropertyCollections Properties
        {
            get
            {
                return ((global::Configuration4Net.PropertyCollections)(base[global::Configuration4Net.ManagerSection.PropertiesPropertyName]));
            }
            set
            {
                base[global::Configuration4Net.ManagerSection.PropertiesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Configuration4Net
{
    
    
    /// <summary>
    /// A collection of ManagerSection instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Configuration4Net.ManagerSection), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate, AddItemName="add", RemoveItemName="remove", ClearItemsName="clear")]
    public partial class ManagerSectionCollections : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Configuration4Net.ManagerSection"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        internal const string ManagerSectionPropertyName = "managerSection";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override string ElementName
        {
            get
            {
                return global::Configuration4Net.ManagerSectionCollections.ManagerSectionPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Configuration4Net.ManagerSectionCollections.ManagerSectionPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Configuration4Net.ManagerSection)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Configuration4Net.ManagerSection"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Configuration4Net.ManagerSection"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Configuration4Net.ManagerSection();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.ManagerSection"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Configuration4Net.ManagerSection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.ManagerSection this[int index]
        {
            get
            {
                return ((global::Configuration4Net.ManagerSection)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.ManagerSection"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Configuration4Net.ManagerSection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.ManagerSection this[object name]
        {
            get
            {
                return ((global::Configuration4Net.ManagerSection)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Configuration4Net.ManagerSection"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="managerSection">The <see cref="global::Configuration4Net.ManagerSection"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Add(global::Configuration4Net.ManagerSection managerSection)
        {
            base.BaseAdd(managerSection);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Configuration4Net.ManagerSection"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="managerSection">The <see cref="global::Configuration4Net.ManagerSection"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public void Remove(global::Configuration4Net.ManagerSection managerSection)
        {
            base.BaseRemove(this.GetElementKey(managerSection));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.ManagerSection"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Configuration4Net.ManagerSection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.ManagerSection GetItemAt(int index)
        {
            return ((global::Configuration4Net.ManagerSection)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Configuration4Net.ManagerSection"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::Configuration4Net.ManagerSection"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public global::Configuration4Net.ManagerSection GetItemByKey(string name)
        {
            return ((global::Configuration4Net.ManagerSection)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.0.5")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
